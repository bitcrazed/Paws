# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- default

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildx86: 'x86'
  buildx64: 'x64'
  buildConfiguration: 'Release'
  majorVersion: 1
  minorVersion: 0
  incrementReleaseTagNumber: $[counter(variables['InitialReleaseTagNumber'], 0)]
  versionSuffix: '-preview'

name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)_v$(majorVersion).$(minorVersion).$(Rev:r)$(versionSuffix)

steps:
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildx86)'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildx64)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop

- task: GitHubRelease@1
  displayName: 'Create GitHub Release'
  inputs:
    gitHubConnection: 'bitcrazed'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(MajorVersion).$(MinorVersion).$(incrementReleaseTagNumber)$(versionSuffix)'
    assets: |
      $(Build.ArtifactStagingDirectory)/**/Release/*.exe
      $(Build.ArtifactStagingDirectory)/**/Release/*.pdb
